options:
  parameters:
    author: yabool2001
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: 'https://wiki.gnuradio.org/index.php/Packet_Communications

      Stable'
    copyright: mzemlo.pl@gmail.com
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: BPSK_test_02_4
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: BPSK test 02.4
    window_size: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 4.0]
    rotation: 0
    state: enabled

blocks:
- name: access_key
  id: variable
  parameters:
    comment: 'HEX: F0 F0 F0 AA AA AA

      DEC: 240 240 240 170 170 170'
    value: '''111100001111000011110000101010101010101010101010'''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [448, 16.0]
    rotation: 0
    state: enabled
- name: access_key_0
  id: variable
  parameters:
    comment: 'HEX: F0 F0 F0 AA AA AA

      DEC: 240 240 240 170 170 170'
    value: '''101010101010101010101010'''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [928, 16.0]
    rotation: 0
    state: enabled
- name: bw
  id: variable
  parameters:
    comment: ''
    value: '20000000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [760, 16.0]
    rotation: 0
    state: enabled
- name: f_c
  id: variable
  parameters:
    comment: ''
    value: '2900000000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [832, 16.0]
    rotation: 0
    state: enabled
- name: header
  id: variable
  parameters:
    comment: 'digital.header_format_default

      ( access_key , 0 )'
    value: digital.header_format_default ( access_key , 0 )
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 16.0]
    rotation: 0
    state: enabled
- name: my_constellation
  id: variable_constellation
  parameters:
    comment: ''
    const_points: '[-1-1j, -1+1j, 1+1j, 1-1j]'
    dims: '1'
    normalization: digital.constellation.AMPLITUDE_NORMALIZATION
    npwr: '1.0'
    precision: '8'
    rot_sym: '4'
    soft_dec_lut: None
    sym_map: '[0, 1, 3, 2]'
    type: bpsk
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [872, 200.0]
    rotation: 0
    state: enabled
- name: nfilts
  id: variable
  parameters:
    comment: ''
    value: '32'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [696, 16.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '65105'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [192, 16.0]
    rotation: 0
    state: enabled
- name: sps
  id: variable
  parameters:
    comment: ''
    value: '4'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [632, 16.0]
    rotation: 0
    state: enabled
- name: taps
  id: variable
  parameters:
    comment: firdes.root_raised_cosine ( nfilts , nfilts , 1.0 / float ( sps ) , 0.35
      , 11 * sps * nfilts )
    value: firdes.root_raised_cosine ( nfilts , nfilts , 1.0 / float ( sps ) , 0.35
      , 11 * sps * nfilts )
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 792.0]
    rotation: 0
    state: enabled
- name: analog_const_source_x_0
  id: analog_const_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '49'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [96, 384.0]
    rotation: 0
    state: disabled
- name: analog_simple_squelch_cc_0
  id: analog_simple_squelch_cc
  parameters:
    affinity: ''
    alias: ''
    alpha: 1e-4
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    threshold: '-40'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [104, 528.0]
    rotation: 0
    state: disabled
- name: blocks_message_debug_0_0
  id: blocks_message_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    en_uvec: 'True'
    log_level: info
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1136, 448.0]
    rotation: 0
    state: enabled
- name: blocks_message_strobe_1
  id: blocks_message_strobe
  parameters:
    affinity: ''
    alias: ''
    comment: 'HEX: 0x31

      BIN: 0b00110001

      DEC: 49

      ASCII: 1'
    maxoutbuf: '0'
    minoutbuf: '0'
    msg: pmt.cons ( pmt.PMT_NIL , pmt.make_u8vector ( 1 , 0x31 ) )
    period: '1000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [56, 208.0]
    rotation: 0
    state: enabled
- name: blocks_pack_k_bits_bb_0_0_0
  id: blocks_pack_k_bits_bb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    k: '8'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [808, 640.0]
    rotation: 0
    state: enabled
- name: blocks_stream_to_tagged_stream_0_0
  id: blocks_stream_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    len_tag_key: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_len: '8'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [656, 552.0]
    rotation: 0
    state: enabled
- name: blocks_stream_to_tagged_stream_0_0_0
  id: blocks_stream_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    len_tag_key: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_len: '1'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [264, 376.0]
    rotation: 0
    state: disabled
- name: blocks_tagged_stream_mux_0
  id: blocks_tagged_stream_mux
  parameters:
    affinity: ''
    alias: ''
    comment: Append header to payload
    lengthtagname: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
    ninputs: '2'
    tag_preserve_head_pos: '0'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [616, 304.0]
    rotation: 0
    state: enabled
- name: digital_constellation_decoder_cb_0
  id: digital_constellation_decoder_cb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: my_constellation
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [480, 648.0]
    rotation: 0
    state: enabled
- name: digital_constellation_modulator_0
  id: digital_constellation_modulator
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: my_constellation
    differential: 'False'
    excess_bw: '0.35'
    log: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_symbol: sps
    truncate: 'False'
    verbose: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [872, 280.0]
    rotation: 0
    state: enabled
- name: digital_correlate_access_code_xx_ts_1_0_0
  id: digital_correlate_access_code_xx_ts
  parameters:
    access_code: access_key
    affinity: ''
    alias: ''
    comment: access_key
    maxoutbuf: '0'
    minoutbuf: '0'
    tagname: '"packet_len"'
    threshold: '0'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [504, 728.0]
    rotation: 0
    state: enabled
- name: digital_crc_append_0
  id: digital_crc_append
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    final_xor: '0xFFFFFFFF'
    initial_value: '0xFFFFFFFF'
    input_reflected: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    num_bits: '32'
    poly: '0x4C11DB7'
    result_reflected: 'True'
    skip_header_bytes: '0'
    swap_endianness: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [192, 288.0]
    rotation: 0
    state: enabled
- name: digital_crc_check_0
  id: digital_crc_check
  parameters:
    affinity: ''
    alias: ''
    comment: Discard CRC = True
    discard_crc: 'True'
    final_xor: '0xFFFFFFFF'
    initial_value: '0xFFFFFFFF'
    input_reflected: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    num_bits: '32'
    poly: '0x4C11DB7'
    result_reflected: 'True'
    skip_header_bytes: '0'
    swap_endianness: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [928, 576.0]
    rotation: 0
    state: enabled
- name: digital_pfb_clock_sync_xxx_0
  id: digital_pfb_clock_sync_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    filter_size: '32'
    init_phase: '16'
    loop_bw: '0.0628'
    max_dev: '1.5'
    maxoutbuf: '0'
    minoutbuf: '0'
    osps: '1'
    sps: sps
    taps: taps
    type: ccf
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 648.0]
    rotation: 0
    state: enabled
- name: digital_protocol_formatter_bb_0
  id: digital_protocol_formatter_bb
  parameters:
    affinity: ''
    alias: ''
    comment: header
    format: header
    len_tag_key: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [616, 240.0]
    rotation: 0
    state: enabled
- name: epy_block_0_0
  id: epy_block
  parameters:
    _source_code: "from gnuradio import gr\nimport numpy as np\nimport time\nimport\
      \ os\n\nclass complex_sps_file_sink(gr.sync_block):\n    def __init__(self,\
      \ samp_rate=32000, sps=2, filename=\"complex_log.csv\"):\n        gr.sync_block.__init__(self,\n\
      \            name=\"Complex Sps File Sink\",\n            in_sig=[np.complex64],\n\
      \            out_sig=None)\n        self.filename = filename\n        self.samp_rate\
      \ = samp_rate\n        self.sps = sps\n        self.start_time = time.time()\n\
      \        self.sample_index = 0  # licznik pr\xF3bek\n\n        file_exists =\
      \ os.path.isfile(filename)\n        self.f = open(filename, \"w\", encoding=\"\
      utf-8\")\n\n        if not file_exists or os.stat(filename).st_size == 0:\n\
      \            self.f.write(\"timestamp;real;imag;symbol_index;samp_rate\\n\"\
      )\n\n    def work(self, input_items, output_items):\n        elapsed = time.time()\
      \ - self.start_time\n        for c in input_items[0]:\n            timestamp\
      \ = elapsed\n            ts = f\"{timestamp:.6f}\".replace('.', ',')\n     \
      \       re = f\"{c.real:.6f}\".replace('.', ',')\n            im = f\"{c.imag:.6f}\"\
      .replace('.', ',')\n            symbol_idx = str(self.sample_index // self.sps)\n\
      \            sr = f\"{self.samp_rate:.0f}\".replace('.', ',')\n\n          \
      \  self.f.write(f\"{ts};{re};{im};{symbol_idx};{sr}\\n\")\n\n            elapsed\
      \ += 1 / self.samp_rate\n            self.sample_index += 1\n\n        self.f.flush()\n\
      \        return len(input_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    filename: '"03_complex_tx_bpsk_mod_log.csv"'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    sps: sps
  states:
    _io_cache: ('Complex Sps File Sink', 'complex_sps_file_sink', [('samp_rate', '32000'),
      ('sps', '2'), ('filename', "'complex_log.csv'")], [('0', 'complex', 1)], [],
      '', ['filename', 'samp_rate', 'sps'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1096, 168.0]
    rotation: 0
    state: disabled
- name: epy_block_1_0_0_0
  id: epy_block
  parameters:
    _source_code: "from gnuradio import gr\nimport numpy as np\nimport time\nimport\
      \ os\n\nclass byte_logger(gr.sync_block):\n    def __init__(self, samp_rate=32000,\
      \ filename=\"byte_log.csv\"):\n        gr.sync_block.__init__(self,\n      \
      \      name=\"BYTE FILE SINK\",\n            in_sig=[np.uint8],\n          \
      \  out_sig=None)\n        self.filename = filename\n        self.samp_rate =\
      \ samp_rate\n        self.start_time = time.time()\n\n        file_exists =\
      \ os.path.isfile(filename)\n        self.f = open(filename, \"w\", encoding=\"\
      utf-8\")\n\n        if not file_exists or os.stat(filename).st_size == 0:\n\
      \            self.f.write(\"timestamp;byte;samp_rate\\n\")\n\n    def work(self,\
      \ input_items, output_items):\n        current_time = time.time()\n        elapsed\
      \ = current_time - self.start_time\n\n        for i, b in enumerate(input_items[0]):\n\
      \            timestamp = elapsed + (i / self.samp_rate)\n            ts = f\"\
      {timestamp:.6f}\".replace('.', ',')\n            val = str(b)\n            sr\
      \ = f\"{self.samp_rate:.0f}\".replace('.', ',')\n            self.f.write(f\"\
      {ts};{val};{sr}\\n\")\n\n        self.f.flush()\n        return len(input_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    filename: '"02_byte_tx_log.csv"'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
  states:
    _io_cache: ('BYTE FILE SINK', 'byte_logger', [('samp_rate', '32000'), ('filename',
      "'byte_log.csv'")], [('0', 'byte', 1)], [], '', ['filename', 'samp_rate'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [872, 120.0]
    rotation: 0
    state: enabled
- name: epy_block_1_0_0_0_0
  id: epy_block
  parameters:
    _source_code: "from gnuradio import gr\nimport numpy as np\nimport time\nimport\
      \ os\n\nclass byte_logger(gr.sync_block):\n    def __init__(self, samp_rate=32000,\
      \ filename=\"byte_log.csv\"):\n        gr.sync_block.__init__(self,\n      \
      \      name=\"BYTE FILE SINK\",\n            in_sig=[np.uint8],\n          \
      \  out_sig=None)\n        self.filename = filename\n        self.samp_rate =\
      \ samp_rate\n        self.start_time = time.time()\n\n        file_exists =\
      \ os.path.isfile(filename)\n        self.f = open(filename, \"w\", encoding=\"\
      utf-8\")\n\n        if not file_exists or os.stat(filename).st_size == 0:\n\
      \            self.f.write(\"timestamp;byte;samp_rate\\n\")\n\n    def work(self,\
      \ input_items, output_items):\n        current_time = time.time()\n        elapsed\
      \ = current_time - self.start_time\n\n        for i, b in enumerate(input_items[0]):\n\
      \            timestamp = elapsed + (i / self.samp_rate)\n            ts = f\"\
      {timestamp:.6f}\".replace('.', ',')\n            val = str(b)\n            sr\
      \ = f\"{self.samp_rate:.0f}\".replace('.', ',')\n            self.f.write(f\"\
      {ts};{val};{sr}\\n\")\n\n        self.f.flush()\n        return len(input_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    filename: '"06_byte_rx_log.csv"'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
  states:
    _io_cache: ('BYTE FILE SINK', 'byte_logger', [('samp_rate', '32000'), ('filename',
      "'byte_log.csv'")], [('0', 'byte', 1)], [], '', ['filename', 'samp_rate'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1056, 744.0]
    rotation: 0
    state: enabled
- name: epy_block_1_0_0_0_1
  id: epy_block
  parameters:
    _source_code: "from gnuradio import gr\nimport numpy as np\nimport time\nimport\
      \ os\n\nclass byte_logger(gr.sync_block):\n    def __init__(self, samp_rate=32000,\
      \ filename=\"byte_log.csv\"):\n        gr.sync_block.__init__(self,\n      \
      \      name=\"BYTE FILE SINK\",\n            in_sig=[np.uint8],\n          \
      \  out_sig=None)\n        self.filename = filename\n        self.samp_rate =\
      \ samp_rate\n        self.start_time = time.time()\n\n        file_exists =\
      \ os.path.isfile(filename)\n        self.f = open(filename, \"w\", encoding=\"\
      utf-8\")\n\n        if not file_exists or os.stat(filename).st_size == 0:\n\
      \            self.f.write(\"timestamp;byte;samp_rate\\n\")\n\n    def work(self,\
      \ input_items, output_items):\n        current_time = time.time()\n        elapsed\
      \ = current_time - self.start_time\n\n        for i, b in enumerate(input_items[0]):\n\
      \            timestamp = elapsed + (i / self.samp_rate)\n            ts = f\"\
      {timestamp:.6f}\".replace('.', ',')\n            val = str(b)\n            sr\
      \ = f\"{self.samp_rate:.0f}\".replace('.', ',')\n            self.f.write(f\"\
      {ts};{val};{sr}\\n\")\n\n        self.f.flush()\n        return len(input_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    filename: '"01_byte_tx_log.csv"'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
  states:
    _io_cache: ('BYTE FILE SINK', 'byte_logger', [('samp_rate', '32000'), ('filename',
      "'byte_log.csv'")], [('0', 'byte', 1)], [], '', ['filename', 'samp_rate'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [616, 168.0]
    rotation: 0
    state: enabled
- name: iio_pluto_sink_0
  id: iio_pluto_sink
  parameters:
    affinity: ''
    alias: ''
    attenuation1: '6'
    bandwidth: bw
    buffer_size: '32768'
    comment: ''
    cyclic: 'False'
    filter: ''
    filter_source: '''Auto'''
    fpass: '0'
    frequency: f_c
    fstop: '0'
    len_tag_key: ''
    samplerate: samp_rate
    type: fc32
    uri: 'usb:'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1096, 256.0]
    rotation: 0
    state: enabled
- name: iio_pluto_source_0
  id: iio_pluto_source
  parameters:
    affinity: ''
    alias: ''
    bandwidth: bw
    bbdc: 'True'
    buffer_size: '32768'
    comment: ''
    filter: ''
    filter_source: '''Auto'''
    fpass: '0'
    frequency: f_c
    fstop: '0'
    gain1: '''fast_attack'''
    len_tag_key: packet_len
    manual_gain1: '64'
    maxoutbuf: '0'
    minoutbuf: '0'
    quadrature: 'True'
    rfdc: 'True'
    samplerate: samp_rate
    type: fc32
    uri: 'usb:'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 620.0]
    rotation: 0
    state: enabled
- name: pdu_pdu_to_tagged_stream_0
  id: pdu_pdu_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    tag: packet_len
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [376, 248.0]
    rotation: 0
    state: enabled
- name: pdu_pdu_to_tagged_stream_0_0
  id: pdu_pdu_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    tag: packet_len
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1056, 680.0]
    rotation: 0
    state: enabled
- name: pdu_pdu_to_tagged_stream_0_0_0
  id: pdu_pdu_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    tag: packet_len
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [616, 120.0]
    rotation: 0
    state: enabled
- name: pdu_random_pdu_0
  id: pdu_random_pdu
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    length_modulo: '1'
    mask: '0xFF'
    maxoutbuf: '0'
    maxsize: '4'
    minoutbuf: '0'
    minsize: '4'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [256, 144.0]
    rotation: 0
    state: enabled
- name: pdu_tagged_stream_to_pdu_0_0
  id: pdu_tagged_stream_to_pdu
  parameters:
    affinity: ''
    alias: ''
    comment: "Wymaga wcze\u015Bniejszego \"Stream to Tagged Stream\"."
    maxoutbuf: '0'
    minoutbuf: '0'
    tag: packet_len
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [784, 744.0]
    rotation: 0
    state: enabled
- name: qtgui_sink_x_0
  id: qtgui_sink_x
  parameters:
    affinity: ''
    alias: ''
    bw: '40000000'
    comment: ''
    fc: f_c
    fftsize: '1024'
    gui_hint: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '"Rx"'
    plotconst: 'True'
    plotfreq: 'True'
    plottime: 'True'
    plotwaterfall: 'False'
    rate: '10'
    showports: 'True'
    showrf: 'False'
    type: complex
    wintype: window.WIN_BLACKMAN_hARRIS
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [320, 504.0]
    rotation: 0
    state: enabled

connections:
- [analog_const_source_x_0, '0', blocks_stream_to_tagged_stream_0_0_0, '0']
- [analog_simple_squelch_cc_0, '0', digital_pfb_clock_sync_xxx_0, '0']
- [analog_simple_squelch_cc_0, '0', qtgui_sink_x_0, '0']
- [blocks_message_strobe_1, strobe, pdu_random_pdu_0, generate]
- [blocks_pack_k_bits_bb_0_0_0, '0', pdu_tagged_stream_to_pdu_0_0, '0']
- [blocks_stream_to_tagged_stream_0_0, '0', blocks_pack_k_bits_bb_0_0_0, '0']
- [blocks_stream_to_tagged_stream_0_0_0, '0', blocks_tagged_stream_mux_0, '1']
- [blocks_stream_to_tagged_stream_0_0_0, '0', digital_protocol_formatter_bb_0, '0']
- [blocks_tagged_stream_mux_0, '0', digital_constellation_modulator_0, '0']
- [blocks_tagged_stream_mux_0, '0', epy_block_1_0_0_0, '0']
- [digital_constellation_decoder_cb_0, '0', digital_correlate_access_code_xx_ts_1_0_0,
  '0']
- [digital_constellation_modulator_0, '0', epy_block_0_0, '0']
- [digital_constellation_modulator_0, '0', iio_pluto_sink_0, '0']
- [digital_correlate_access_code_xx_ts_1_0_0, '0', blocks_stream_to_tagged_stream_0_0,
  '0']
- [digital_crc_append_0, out, pdu_pdu_to_tagged_stream_0, pdus]
- [digital_crc_check_0, ok, blocks_message_debug_0_0, print]
- [digital_crc_check_0, ok, pdu_pdu_to_tagged_stream_0_0, pdus]
- [digital_pfb_clock_sync_xxx_0, '0', digital_constellation_decoder_cb_0, '0']
- [digital_protocol_formatter_bb_0, '0', blocks_tagged_stream_mux_0, '0']
- [iio_pluto_source_0, '0', analog_simple_squelch_cc_0, '0']
- [iio_pluto_source_0, '0', digital_pfb_clock_sync_xxx_0, '0']
- [iio_pluto_source_0, '0', qtgui_sink_x_0, '0']
- [pdu_pdu_to_tagged_stream_0, '0', blocks_tagged_stream_mux_0, '1']
- [pdu_pdu_to_tagged_stream_0, '0', digital_protocol_formatter_bb_0, '0']
- [pdu_pdu_to_tagged_stream_0_0, '0', epy_block_1_0_0_0_0, '0']
- [pdu_pdu_to_tagged_stream_0_0_0, '0', epy_block_1_0_0_0_1, '0']
- [pdu_random_pdu_0, pdus, digital_crc_append_0, in]
- [pdu_random_pdu_0, pdus, pdu_pdu_to_tagged_stream_0_0_0, pdus]
- [pdu_tagged_stream_to_pdu_0_0, pdus, digital_crc_check_0, in]

metadata:
  file_format: 1
  grc_version: 3.10.12.0
