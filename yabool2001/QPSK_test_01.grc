options:
  parameters:
    author: yabool2001
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: mzemlo.pl@gmail.com
    description: QPSK demonstration test
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: QPSK_test_01
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: QPSK test 01
    window_size: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 4.0]
    rotation: 0
    state: enabled

blocks:
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '32000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [344, 44.0]
    rotation: 0
    state: enabled
- name: sps
  id: variable
  parameters:
    comment: ''
    value: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [504, 44.0]
    rotation: 0
    state: enabled
- name: blocks_message_debug_0
  id: blocks_message_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    en_uvec: 'True'
    log_level: info
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [724.0, 48]
    rotation: 90
    state: enabled
- name: blocks_message_strobe_1
  id: blocks_message_strobe
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    msg: pmt.init_u8vector ( 1 , [ 0x00 , 0x01 , 0x02 , 0x03 ] )
    period: '1000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [88, 388.0]
    rotation: 0
    state: enabled
- name: blocks_repack_bits_bb_0
  id: blocks_repack_bits_bb
  parameters:
    affinity: ''
    alias: ''
    align_output: 'False'
    comment: ''
    endianness: gr.GR_LSB_FIRST
    k: '8'
    l: '2'
    len_tag_key: packet_len
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1440, 388.0]
    rotation: 0
    state: enabled
- name: blocks_throttle2_0
  id: blocks_throttle2
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    limit: auto
    maximum: '0.1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1192, 388.0]
    rotation: 0
    state: enabled
- name: blocks_vector_source_x_0
  id: blocks_vector_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    repeat: 'True'
    tags: '[]'
    type: byte
    vector: ( 0 , 1 , 1 , 0 )
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [48, 232.0]
    rotation: 0
    state: disabled
- name: digital_chunks_to_symbols_xx_0
  id: digital_chunks_to_symbols_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    dimension: '1'
    in_type: byte
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    out_type: complex
    symbol_table: '[ 1+1j , -1+1j , -1-1j , 1-1j ]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1872, 404.0]
    rotation: 0
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "from gnuradio import gr\nimport numpy as np\nimport time\nimport\
      \ os\n\nclass complex_logger(gr.sync_block):\n    def __init__(self, samp_rate=32000,\
      \ filename=\"complex_log.csv\"):\n        gr.sync_block.__init__(self,\n   \
      \         name=\"COMPLEX FILE SINK\",\n            in_sig=[np.complex64],\n\
      \            out_sig=None)\n        self.filename = filename\n        self.samp_rate\
      \ = samp_rate\n        self.start_time = time.time()\n\n        file_exists\
      \ = os.path.isfile(filename)\n        self.f = open(filename, \"w\", encoding=\"\
      utf-8\")\n\n        if not file_exists or os.stat(filename).st_size == 0:\n\
      \            self.f.write(\"timestamp;real;imag;samp_rate\\n\")\n\n    def work(self,\
      \ input_items, output_items):\n        current_time = time.time()\n        elapsed\
      \ = current_time - self.start_time\n\n        for c in input_items[0]:\n   \
      \         timestamp = elapsed\n            ts = f\"{timestamp:.6f}\".replace('.',\
      \ ',')\n            re = f\"{c.real:.6f}\".replace('.', ',')\n            im\
      \ = f\"{c.imag:.6f}\".replace('.', ',')\n            sr = f\"{self.samp_rate:.0f}\"\
      .replace('.', ',')\n            self.f.write(f\"{ts};{re};{im};{sr}\\n\")\n\
      \            elapsed += 1 / self.samp_rate\n\n        self.f.flush()\n     \
      \   return len(input_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    filename: '"complex_log.csv"'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
  states:
    _io_cache: ('COMPLEX FILE SINK', 'complex_logger', [('samp_rate', '32000'), ('filename',
      "'complex_log.csv'")], [('0', 'complex', 1)], [], '', ['filename', 'samp_rate'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2148.0, 112]
    rotation: 90
    state: enabled
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "from gnuradio import gr\nimport numpy as np\nimport time\nimport\
      \ os\n\nclass byte_logger(gr.sync_block):\n    def __init__(self, samp_rate=32000,\
      \ filename=\"byte_log.csv\"):\n        gr.sync_block.__init__(self,\n      \
      \      name=\"BYTE FILE SINK\",\n            in_sig=[np.uint8],\n          \
      \  out_sig=None)\n        self.filename = filename\n        self.samp_rate =\
      \ samp_rate\n        self.start_time = time.time()\n\n        file_exists =\
      \ os.path.isfile(filename)\n        self.f = open(filename, \"w\", encoding=\"\
      utf-8\")\n\n        if not file_exists or os.stat(filename).st_size == 0:\n\
      \            self.f.write(\"timestamp;byte;samp_rate\\n\")\n\n    def work(self,\
      \ input_items, output_items):\n        current_time = time.time()\n        elapsed\
      \ = current_time - self.start_time\n\n        for i, b in enumerate(input_items[0]):\n\
      \            timestamp = elapsed + (i / self.samp_rate)\n            ts = f\"\
      {timestamp:.6f}\".replace('.', ',')\n            val = str(b)\n            sr\
      \ = f\"{self.samp_rate:.0f}\".replace('.', ',')\n            self.f.write(f\"\
      {ts};{val};{sr}\\n\")\n\n        self.f.flush()\n        return len(input_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    filename: '"byte_log.csv"'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
  states:
    _io_cache: ('BYTE FILE SINK', 'byte_logger', [('samp_rate', '32000'), ('filename',
      "'byte_log.csv'")], [('0', 'byte', 1)], [], '', ['filename', 'samp_rate'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1100.0, 96]
    rotation: 90
    state: enabled
- name: pdu_pdu_to_tagged_stream_0
  id: pdu_pdu_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    tag: packet_len
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [824, 400.0]
    rotation: 0
    state: enabled
- name: pdu_random_pdu_0
  id: pdu_random_pdu
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    length_modulo: '1'
    mask: '0x03'
    maxoutbuf: '0'
    maxsize: '1'
    minoutbuf: '0'
    minsize: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [440, 364.0]
    rotation: 0
    state: enabled
- name: qtgui_const_sink_x_0
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '""'
    nconnections: '1'
    size: '4'
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '2'
    xmin: '-2'
    ymax: '2'
    ymin: '-2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2108.0, 768]
    rotation: 270
    state: enabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '4'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '2'
    ymin: '-2'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1976.0, 776]
    rotation: 270
    state: enabled

connections:
- [blocks_message_strobe_1, strobe, pdu_random_pdu_0, generate]
- [blocks_repack_bits_bb_0, '0', digital_chunks_to_symbols_xx_0, '0']
- [blocks_throttle2_0, '0', blocks_repack_bits_bb_0, '0']
- [digital_chunks_to_symbols_xx_0, '0', epy_block_0, '0']
- [digital_chunks_to_symbols_xx_0, '0', qtgui_const_sink_x_0, '0']
- [digital_chunks_to_symbols_xx_0, '0', qtgui_time_sink_x_0, '0']
- [pdu_pdu_to_tagged_stream_0, '0', blocks_throttle2_0, '0']
- [pdu_pdu_to_tagged_stream_0, '0', epy_block_1, '0']
- [pdu_random_pdu_0, pdus, blocks_message_debug_0, print]
- [pdu_random_pdu_0, pdus, pdu_pdu_to_tagged_stream_0, pdus]

metadata:
  file_format: 1
  grc_version: 3.10.12.0
